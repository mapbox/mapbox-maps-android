// Signature format: 3.0
package com.mapbox.maps.extension.androidauto {

  public class DefaultMapboxCarMapGestureHandler implements com.mapbox.maps.extension.androidauto.MapboxCarMapGestureHandler {
    ctor public DefaultMapboxCarMapGestureHandler();
  }

  public final class MapboxCarMap {
    ctor public MapboxCarMap();
    method public com.mapbox.maps.extension.androidauto.MapboxCarMap clearObservers();
    method public androidx.car.app.CarContext getCarContext();
    method public com.mapbox.maps.extension.androidauto.MapboxCarMapSurface? getCarMapSurface();
    method public com.mapbox.maps.MapInitOptions getMapInitOptions();
    method public android.graphics.Rect? getStableArea();
    method public com.mapbox.maps.EdgeInsets? getStableEdgeInsets();
    method public android.graphics.Rect? getVisibleArea();
    method public com.mapbox.maps.EdgeInsets? getVisibleEdgeInsets();
    method @com.mapbox.maps.MapboxExperimental public androidx.car.app.SurfaceCallback prepareSurfaceCallback(androidx.car.app.CarContext carContext, com.mapbox.maps.MapInitOptions mapInitOptions);
    method public com.mapbox.maps.extension.androidauto.MapboxCarMap registerObserver(com.mapbox.maps.extension.androidauto.MapboxCarMapObserver mapboxCarMapObserver);
    method public com.mapbox.maps.extension.androidauto.MapboxCarMap setGestureHandler(com.mapbox.maps.extension.androidauto.MapboxCarMapGestureHandler? gestureHandler);
    method public com.mapbox.maps.extension.androidauto.MapboxCarMap setup(androidx.car.app.CarContext carContext, com.mapbox.maps.MapInitOptions mapInitOptions);
    method public com.mapbox.maps.extension.androidauto.MapboxCarMap unregisterObserver(com.mapbox.maps.extension.androidauto.MapboxCarMapObserver mapboxCarMapObserver);
    property public final androidx.car.app.CarContext carContext;
    property public final com.mapbox.maps.extension.androidauto.MapboxCarMapSurface? carMapSurface;
    property public final com.mapbox.maps.MapInitOptions mapInitOptions;
    property public final android.graphics.Rect? stableArea;
    property public final com.mapbox.maps.EdgeInsets? stableEdgeInsets;
    property public final android.graphics.Rect? visibleArea;
    property public final com.mapbox.maps.EdgeInsets? visibleEdgeInsets;
  }

  public final class MapboxCarMapEx {
    method @com.mapbox.maps.MapboxExperimental public static com.mapbox.maps.extension.androidauto.MapboxCarMapSessionInstaller mapboxMapInstaller(androidx.car.app.Session);
    method @com.mapbox.maps.MapboxExperimental public static com.mapbox.maps.extension.androidauto.MapboxCarMapScreenInstaller mapboxMapInstaller(androidx.car.app.Screen, com.mapbox.maps.extension.androidauto.MapboxCarMap mapboxCarMap);
  }

  public interface MapboxCarMapGestureHandler {
    method public default void onFling(com.mapbox.maps.extension.androidauto.MapboxCarMapSurface, float, float);
    method public default void onScale(com.mapbox.maps.extension.androidauto.MapboxCarMapSurface, float, float, float);
    method public default void onScroll(com.mapbox.maps.extension.androidauto.MapboxCarMapSurface, com.mapbox.maps.ScreenCoordinate, float, float);
  }

  @com.mapbox.maps.MapboxExperimental public fun interface MapboxCarMapInitializer {
    method public com.mapbox.maps.MapInitOptions onCreate(androidx.car.app.CarContext carContext);
  }

  public interface MapboxCarMapObserver {
    method public default void onAttached(com.mapbox.maps.extension.androidauto.MapboxCarMapSurface);
    method public default void onDetached(com.mapbox.maps.extension.androidauto.MapboxCarMapSurface);
    method public default void onStableAreaChanged(android.graphics.Rect, com.mapbox.maps.EdgeInsets);
    method public default void onVisibleAreaChanged(android.graphics.Rect, com.mapbox.maps.EdgeInsets);
  }

  @com.mapbox.maps.MapboxExperimental public final class MapboxCarMapScreenInstaller {
    ctor public MapboxCarMapScreenInstaller(androidx.car.app.Screen screen, com.mapbox.maps.extension.androidauto.MapboxCarMap mapboxCarMap);
    method public com.mapbox.maps.extension.androidauto.MapboxCarMapScreenInstaller gestureHandler(com.mapbox.maps.extension.androidauto.MapboxCarMapGestureHandler? handler);
    method public com.mapbox.maps.extension.androidauto.MapboxCarMap install();
    method public com.mapbox.maps.extension.androidauto.MapboxCarMapScreenInstaller onCreated(com.mapbox.maps.extension.androidauto.MapboxCarMapObserver... observers);
    method public com.mapbox.maps.extension.androidauto.MapboxCarMapScreenInstaller onResumed(com.mapbox.maps.extension.androidauto.MapboxCarMapObserver... observers);
    method public com.mapbox.maps.extension.androidauto.MapboxCarMapScreenInstaller onStarted(com.mapbox.maps.extension.androidauto.MapboxCarMapObserver... observers);
  }

  @com.mapbox.maps.MapboxExperimental public final class MapboxCarMapSessionInstaller {
    ctor public MapboxCarMapSessionInstaller(androidx.car.app.Session session, com.mapbox.maps.extension.androidauto.MapboxCarMap mapboxCarMap = com.mapbox.maps.extension.androidauto.MapboxCarMap());
    method public com.mapbox.maps.extension.androidauto.MapboxCarMap install(com.mapbox.maps.extension.androidauto.MapboxCarMapInitializer initializer = com.mapbox.maps.extension.androidauto.MapboxCarMapSessionInstaller.defaultInitializer);
    method public com.mapbox.maps.extension.androidauto.MapboxCarMap install();
    method public com.mapbox.maps.extension.androidauto.MapboxCarMapSessionInstaller onCreated(com.mapbox.maps.extension.androidauto.MapboxCarMapObserver... observers);
    method public com.mapbox.maps.extension.androidauto.MapboxCarMapSessionInstaller onResumed(com.mapbox.maps.extension.androidauto.MapboxCarMapObserver... observers);
    method public com.mapbox.maps.extension.androidauto.MapboxCarMapSessionInstaller onStarted(com.mapbox.maps.extension.androidauto.MapboxCarMapObserver... observers);
  }

  public final class MapboxCarMapSurface {
    method public androidx.car.app.CarContext getCarContext();
    method public com.mapbox.maps.MapSurface getMapSurface();
    method public androidx.car.app.SurfaceContainer getSurfaceContainer();
    property public final androidx.car.app.CarContext carContext;
    property public final com.mapbox.maps.MapSurface mapSurface;
    property public final androidx.car.app.SurfaceContainer surfaceContainer;
  }

}

package com.mapbox.maps.extension.androidauto.widgets {

  @com.mapbox.maps.MapboxExperimental public final class CompassWidget extends com.mapbox.maps.renderer.widget.BitmapWidget {
    ctor public CompassWidget(android.content.Context context, com.mapbox.maps.renderer.widget.WidgetPosition position = com.mapbox.maps.renderer.widget.WidgetPosition(WidgetPosition.Horizontal.RIGHT, WidgetPosition.Vertical.TOP), float marginX = 20f, float marginY = 20f);
  }

  @com.mapbox.maps.MapboxExperimental public final class LogoWidget extends com.mapbox.maps.renderer.widget.BitmapWidget {
    ctor public LogoWidget(android.content.Context context, com.mapbox.maps.renderer.widget.WidgetPosition position = com.mapbox.maps.renderer.widget.WidgetPosition(WidgetPosition.Horizontal.LEFT, WidgetPosition.Vertical.BOTTOM), float marginX = 20f, float marginY = 20f);
  }

}

