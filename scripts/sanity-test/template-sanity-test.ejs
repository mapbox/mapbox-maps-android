<%
  const activity = locals[0];
  const subPackage = locals[1];
-%>
// This file is generated. Edit scripts/sanity-test/generate-sanity-test.js, then run `make generate-sanity-test`.
package com.mapbox.maps.testapp.activity.<%- subPackage %>

import android.os.Handler
import androidx.test.ext.junit.rules.ActivityScenarioRule
import androidx.test.ext.junit.runners.AndroidJUnit4
import androidx.test.filters.LargeTest
import com.mapbox.maps.testapp.<%- subPackage %>.<%- activity %>
import org.junit.Rule
import org.junit.Test
import org.junit.runner.RunWith
import java.util.concurrent.CountDownLatch
import java.util.concurrent.TimeUnit
import java.util.concurrent.TimeoutException

@RunWith(AndroidJUnit4::class)
@LargeTest
class <%- activity %>Test {

  @get:Rule
  var activityRule: ActivityScenarioRule<<%- activity %>> =
    ActivityScenarioRule(<%- activity %>::class.java)

  @Test
  fun sanity() {
    val latch = CountDownLatch(1)
    activityRule.scenario.onActivity {
      it.runOnUiThread {
        Handler().postDelayed({
          latch.countDown()
        }, 1250)
      }
    }
    if (!latch.await(2500, TimeUnit.MILLISECONDS)) {
      throw TimeoutException()
    }
  }
}